
This is what a basic advanced.delegation, delegating work to different class.

class Rectangle(val width:Int, val height:Int){
    fun area(){
        return width * height;
    }
}

class Window(val bounds:Rectangle){
    // Delegation
    fun area() = bounds.area()
}

In kotlin, it provides first class support for advanced.delegation in a different way.

The Delegation pattern has proven to be a good alternative to implementation inheritance,
and Kotlin supports it natively requiring zero boilerplate code